=================================
Changes up to Thunderbird 128 ESR
=================================

--------------------
Thunderbird 117 Beta
--------------------

messages API
============
* Added the optional ``data_format`` parameter to :ref:`messages.getRaw` to request the message as a DOM ``File`` object.

--------------------
Thunderbird 120 Beta
--------------------

messages API
============
* Added :ref:`messages.abortList` to  terminate any process currently still adding messages to the given list.
* Added the ``messagesPerPage`` property to the ``queryInfo`` parameter of :ref:`messages.query`, to allow queries to override the default size of message pages.  See :doc:`../examples/messageLists` for more information.
* Added the ``autoPaginationTimeout`` property to the ``queryInfo`` parameter of :ref:`messages.query`, to allow queries to override the default pagination timeout of ``1000ms``. Long running queries will return pages even if they have not reached the nominal page size, to allow extensions to work with the already received results or terminate the list (and the associated query) using :ref:`messages.abortList`.
* Added the ``returnMessageListId`` property to the ``queryInfo`` parameter of :ref:`messages.query`, to force queries to immediately return the id of the list associated with the query, instead of waiting for at least one found message and returning the first page.
* Extend allowed characters for tag names in :ref:`messages.createTag`, :ref:`messages.updateTag` and :ref:`messages.deleteTag` from alpha-numeric characters only, to all characters excluding ``^ ()/{%*<>"``.

--------------------
Thunderbird 121 Beta
--------------------

folders API
===========
* Added :ref:`folders.get` to retrieve a folder identified by the given id (the nature of the id will continue to change).
* Added :ref:`folders.getFolderCapabilities` to retrieve capabilitiy information about a given folder.
* Added :ref:`folders.markAsRead` to mark all messages in a folder as read.
* Added :ref:`folders.query` to query for folders with specified properties.
* Added :ref:`folders.update` to update properties of the given folder.
* Added the :ref:`folders.onUpdated` event.
* Added ``isVirtual``, ``isRoot`` and ``isFavorite`` members to the :ref:`folders.MailFolder` type.
* Added ``lastUsed``, ``newMessageCount`` and ``quota`` members to the :ref:`folders.MailFolderInfo` type.
* The ``type`` member of the :ref:`folders.MailFolder` type has been deprecated. It was replaced by the array member ``specialUse``, allowing folders to have multiple special uses.
* The ``favorite`` member of the :ref:`folders.MailFolderInfo` type has been deprecated. It was replaced by the ``isFavorite`` property of the :ref:`folders.MailFolder` type.

mailTabs API
============
* Added :ref:`mailTabs.create`, to create a new mail tab with a specified folder.
* Added :ref:`mailTabs.getListedMessages`, to retrieve the messages currently being listed in the specified tab, honoring sort order and filters.

messages API
============
* Added the ``accountId``, ``folderId``, ``junk``, ``junkScore``, ``new`` and ``size`` properties to the ``queryInfo`` parameter of :ref:`messages.query`, to query for messages with the given properties.
* Added the ability to :ref:`messages.query` for a range instead of a fixed value for ``attachment``, ``junkScore`` and ``size``.
* Added the ``monitorAllFolders`` parameter to the :ref:`messages.onNewMailReceived` event, to allow extensions to listen for new messages in all folders, not just in inbox folders.

messages.tags API
=================
All tag related functions have been moved into its own :doc:`/messages.tags`.

* Added :ref:`messages.tags.list` function, to list tags.
* Added :ref:`messages.tags.create` function, to create new tags.
* Added :ref:`messages.tags.update` function, to update tags.
* Added :ref:`messages.tags.delete` function, to delete tags.

The former functions :ref:`messages.listTags`, :ref:`messages.createTag`, :ref:`messages.updateTag` and :ref:`messages.deleteTag` have been deprecated.

tabs API
========
* Allow :ref:`tabs.query` to also provide an array of :ref:`tabs.TabType` for ``queryInfo.type``, for example to find all ``mail`` and ``messageDisplay`` tabs.

--------------------
Thunderbird 122 Beta
--------------------

menus API
=========
* Officially support ``data:`` urls and ``blob:`` urls for menu icons.

messages API
============
* Introduction of the :permission:`messagesUpdate` permission, required for :ref:`messages.update`.
* Introduction of the :permission:`messagesTagsList` permission, required for :ref:`messages.tags.list`.

--------------------
Thunderbird 123 Beta
--------------------

messages API
============

* Added :ref:`messages.deleteAttachments`, to remove attachments from messages. The new :permission:`messagesModifyPermanent` is required to permanently modify the message content. The content-type of such attachments will be ``text/x-moz-deleted``

--------------------
Thunderbird 124 Beta
--------------------

menus API
=========
* Officially support remote ``http(s):`` urls for menu icons.

--------------------
Thunderbird 125 Beta
--------------------

compose API
===========
* Added ``autoSave`` as a possible value of the ``saveInfo.mode`` property of the :ref:`compose.onAfterSave` event.
* Added ``isModified`` property to :ref:`compose.ComposeDetails`, indicating whether the compose window will ask for confirmation before being closed, because its content has been modified but not yet saved.

messages API
============
* Added an optional ``decrypt`` parameter to :ref:`messages.getFull`, to request the decryption before parsing the message. Defaults to ``true``.
* Added an optional ``decrypt`` parameter to :ref:`messages.getRaw`, to request the decryption before returning the raw message content. Defaults to ``false``.
* Added ``decryptionStatus`` property to :ref:`messages.MessagePart` (one of ``none``, ``skipped``, ``success`` or ``fail``).

messengerUtilities API
======================
* Adding a new API with useful helper functions.
* Added :ref:`messengerUtilities.formatFileSize` to properly format file sizes (for example ``12 bytes`` or ``11,4 GB``).
* Added :ref:`messengerUtilities.parseMailboxString`, to parse a mailbox string containing one or more email addresses (see RFC 5322, section 3.4). For example ``User1 <user1@inter.net>, User2 <user2@inter.net>`` will return an array with two :ref:`messengerUtilities.ParsedMailbox` entries, giving access the the ``name`` and ``email`` part of the provided mailbox strings.

--------------------
Thunderbird 126 Beta
--------------------

messageDisplayScripts API
=========================
* Added support for ``runAt`` to :ref:`messageDisplayScripts.RegisteredMessageDisplayScriptOptions`

--------------------
Thunderbird 127 Beta
--------------------

folders API
===========
* Added support for ``isTag`` and ``isVirtual`` properties to :ref:`folders.MailFolder`.
* Added support for ``queryInfo.isTag`` and ``queryInfo.isVirtual`` properties to :ref:`folders.query`.
* Added :ref:`folders.getUnifiedFolder` to return a specific unified folder (``inbox``, ``trash`` etc.).
* Added :ref:`folders.getTagFolder` to return a specific tag folder.

mailTabs API
============
* Added ``folderMode`` and ``folderModesEnabled`` properties to :ref:`mailTabs.MailTab` and :ref:`mailTabs.MailTabProperties`.

--------------------
Thunderbird 128 Beta
--------------------

browserAction API
========================
* Added :ref:`browserAction.getBadgeTextColor`.
* Added :ref:`browserAction.setBadgeTextColor`.

compose API
===========
* Added ``attachPublicPGPKey`` and ``selectedEncryptionTechnology`` properties to :ref:`compose.ComposeDetails`


composeAction API
========================
* Added :ref:`browserAction.getBadgeTextColor`.
* Added :ref:`browserAction.setBadgeTextColor`.

identities API
==============
* Added :ref:`identities.EncryptionCapabilities`, used in the added `encryptionCapabilities` property of :ref:`identities.MailIdentity`.

mailTabs API
============
* Added :ref:`mailTabs.getSelectedFolders` to return the currently selected folders in the folder pane.

menus API
=========
* Added ``selectedFolders`` property to :ref:`menus-OnShown` and :ref:`menus.OnClicked`.

messageDisplayAction API
========================
* Added :ref:`messageDisplayAction.getBadgeTextColor`.
* Added :ref:`messageDisplayAction.setBadgeTextColor`.

messages API
============
* Added :ref:`messages.listInlineTextParts`

messengerUtilities API
======================
* Addded :ref:`messengerUtilities.convertToPlainText`